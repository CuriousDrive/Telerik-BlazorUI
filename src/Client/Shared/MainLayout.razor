@inherits LayoutComponentBase
@inject NavigationManager _navigationManager

<TelerikRootComponent>
    <TelerikDrawer Data="MenuItems"
                   @ref="TelerikDrawer"
                   Mode="DrawerMode.Push"
                   MiniMode="true"
                   SelectedItem="Item"
                   SelectedItemChanged="@((MenuItem menuItem) => SelectedItemChangedHandler(menuItem))"
                   Expanded="IsExpanded"
                   ExpandedChanged="@((bool newValue) => ExpandedChangedHandler(newValue))">
        <Template Context="items">
            @if(IsExpanded)
            {
                <LoginDisplay></LoginDisplay>
            }

            <div class="k-drawer-items">
                <ul>
                    @foreach (var item in items)
                    {
                        <li class="k-drawer-item @(IsMenuItemHeader(item) == true? "bg-secondary" : "")"
                            @onclick="@(() => NavigateTo(item))">
                            @if (item.Group == "other")
                            {
                                <span class="k-icon k-i-@item.Icon" style="margin-right: 8px;"></span>
                            }
                            else
                            {
                                <img src="@item.ImageUrl" />
                            }

                            @if (IsExpanded)
                            {
                                @if (!IsMenuItemHeader(item))
                                {
                                    <span style="font-weight:bold;font-family:Calibri;font-size:large;color:darkgreen">
                                        &nbsp; @item.Text
                                    </span>
                                }
                                else
                                {
                                    <span style="font-weight:bold;font-family:Calibri;font-size:large;color:black">
                                        &nbsp; @item.Text
                                    </span>
                                }
                            }
                        </li>
                    }
                </ul>
            </div>
        </Template>
        <Content>
            <div class="main" style="width:80vw">
                <div class="top-row px-4">
                    <div class="col-3">
                        <TelerikButton Icon="@IconName.Menu" OnClick="@(() => TelerikDrawer.ToggleAsync())"></TelerikButton>
                    </div>
                    <div class="col-3">
                        Expanded : <TelerikCheckBox @bind-Value="IsExpanded"></TelerikCheckBox>
                    </div>
                    <div class="col-4" style="text-align-last:center">
                        <label style="font-size:x-large; font-weight:bolder; color:red; align-items:center">
                            @Item?.Text
                        </label>
                    </div>
                    <a href="http://blazor.net" target="_blank" class="ml-md-auto">About</a>
                </div>
                <div class="content px-4">
                    @Body
                </div>
            </div>
        </Content>
    </TelerikDrawer>
</TelerikRootComponent>

@code {

    private TelerikDrawer<MenuItem> TelerikDrawer;
    private MenuItem Item;
    public bool IsExpanded { get; set; }

    private IEnumerable<MenuItem> MenuItems => new List<MenuItem>
    {
        new MenuItem { Text = "Application" },
        new MenuItem { Text = "Authors", Url ="/", Icon = IconName.User, ImageUrl = "/img/authors.png", Group = "app" },
        new MenuItem { Text = "Publishers", Url ="/publishers", Icon = IconName.Blogger, ImageUrl = "/img/publishers.png", Group = "app" },
        new MenuItem { Text = "Books", Url ="/books", Icon = IconName.FilePdf, ImageUrl = "/img/books.png", Group = "app" },
        new MenuItem { Text = "Resources" },
        new MenuItem { Text = "GitHub", Icon = IconName.Share, Url="https://github.com/CuriousDrive/Telerik", Group = "other" },
        new MenuItem { Text = "Documentation", Icon = IconName.Html, Url="https://docs.telerik.com/blazor-ui/introduction", Group = "other" },
        new MenuItem { Text = "Support", Icon = IconName.Question, Url="https://www.telerik.com/account/support-tickets" , Group = "other"},
        new MenuItem { Text = "Telerik", Icon = IconName.HyperlinkGlobe, Url="https://telerik.com", Group = "other"}
    };

    private void SelectedItemChangedHandler(MenuItem menuItem)
    {
        Item = menuItem;
        Console.WriteLine("User has selected :" + menuItem.Text);
    }

    private void ExpandedChangedHandler(bool newValue)
    {
        IsExpanded = newValue;
    }

    private bool IsMenuItemHeader(MenuItem menuItem)
        => true ? (menuItem.Text == "Application" || menuItem.Text == "Resources") : false;

    private void NavigateTo(MenuItem menuItem)
    {
        _navigationManager.NavigateTo(menuItem.Url);
        Item = menuItem;
    }
}